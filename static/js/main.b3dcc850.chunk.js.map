{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","contactForm","this","formWrap","label","input","type","onChange","pattern","title","required","button","Component","ContactList","contacts","onDeleteContact","map","id","onClick","Filter","App","filter","formSubmitHandler","contact","uuidv4","find","alert","changeFilter","getFiltredContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","filtredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,OAAS,8B,mLCGrBC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKX,OAEzB,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,sBAAMW,UAAWC,IAAEC,YAAaJ,SAAUK,KAAKR,aAA/C,SACE,sBAAKK,UAAWC,IAAEG,SAAlB,UACE,wBAAOJ,UAAWC,IAAEI,MAApB,iBACO,IACL,uBACEL,UAAWC,IAAEK,MACbC,KAAK,OACLd,MAAOU,KAAKhB,MAAMC,KAClBoB,SAAUL,KAAKb,aACfF,KAAK,OACLqB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAOX,UAAWC,IAAEI,MAApB,mBACS,IACP,uBACEL,UAAWC,IAAEK,MACbC,KAAK,MACLd,MAAOU,KAAKhB,MAAME,OAClBmB,SAAUL,KAAKb,aACfF,KAAK,SACLqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAIZ,wBAAQX,UAAWC,IAAEW,OAAQL,KAAK,SAAlC,kC,GAvDgBM,aAqEX3B,I,iBC9CA4B,EAvBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,6BACGD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAI9B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACGD,EADH,KACWC,EACT,wBAAQW,UAAWC,IAAEW,OAAQO,QAAS,kBAAMH,EAAgBE,IAA5D,sBAFOA,S,gBCWAE,EAdA,SAAC,GAAyB,IAAvB3B,EAAsB,EAAtBA,MAAOe,EAAe,EAAfA,SACvB,OACE,wBAAOR,UAAWC,IAAEI,MAApB,kCAEE,uBAAOL,UAAWC,IAAEK,MAAOC,KAAK,OAAOd,MAAOA,EAAOe,SAAUA,QCF/Da,E,4MACJlC,MAAQ,CACN4B,SAAU,CACR,CAAEG,GAAI,OAAQ9B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE6B,GAAI,OAAQ9B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE6B,GAAI,OAAQ9B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE6B,GAAI,OAAQ9B,KAAM,iBAAkBC,OAAQ,cAEhDiC,OAAQ,I,EAGVC,kBAAoB,YAAuB,IAApBnC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACrBmC,EAAU,CACdN,GAAIO,cAEJrC,OACAC,UAGF,OAAI,EAAKF,MAAM4B,SAASW,MAAK,SAAAF,GAAO,OAAIA,EAAQpC,OAASA,KAChDuC,MAAM,GAAD,OAAIvC,EAAJ,4BACH,EAAKD,MAAM4B,SAASW,MAAK,SAAAF,GAAO,OAAIA,EAAQnC,SAAWA,KACzDsC,MAAM,GAAD,OAAItC,EAAJ,iCAGd,EAAKK,UAAS,gBAAGqB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAES,GAAH,mBAAeT,S,EAI3Ba,aAAe,SAAArC,GACb,EAAKG,SAAS,CAAE4B,OAAQ/B,EAAEC,cAAcC,S,EAG1CoC,mBAAqB,WACnB,MAA6B,EAAK1C,MAA1BmC,EAAR,EAAQA,OAAQP,EAAhB,EAAgBA,SACVe,EAAmBR,EAAOS,cAEhC,OAAOhB,EAASO,QAAO,qBAAGlC,KAAgB2C,cAAcC,SAASF,O,EAGnEG,cAAgB,SAAAC,GAAS,OACvB,EAAKxC,UAAS,SAAAyC,GAAS,MAAK,CAC1BpB,SAAUoB,EAAUpB,SAASO,QAAO,qBAAGJ,KAAgBgB,U,4CAG3D,WACE,IAAME,EAAkBjC,KAAK0B,qBAC7B,OACE,gCACE,2CACA,cAAC,EAAD,CAAa/B,SAAUK,KAAKoB,oBAC5B,0CACA,cAAC,EAAD,CAAQ9B,MAAOU,KAAKhB,MAAMmC,OAAQd,SAAUL,KAAKyB,eACjD,cAAC,EAAD,CAAab,SAAUqB,EAAiBpB,gBAAiBb,KAAK8B,uB,GAtDpDpB,aA4DHQ,IC5DfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BzD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,SAAW,8BAA8B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,kBCAzLD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.b3dcc850.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__VzNeD\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.contactForm} onSubmit={this.handleSubmit}>\n        <div className={s.formWrap}>\n          <label className={s.label}>\n            Name{' '}\n            <input\n              className={s.input}\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label className={s.label}>\n            Number{' '}\n            <input\n              className={s.input}\n              type=\"tel\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n\n          <button className={s.button} type=\"submit\">\n            Add contact\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  contacts: PropTypes.array,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        {name}: {number}\n        <button className={s.button} onClick={() => onDeleteContact(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input className={s.input} type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      // ...data,\n      name,\n      number,\n    };\n\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts`);\n    } else if (this.state.contacts.find(contact => contact.number === number)) {\n      return alert(`${number} is already in contacts`);\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFiltredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n  };\n\n  deleteContact = contactId =>\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n    }));\n\n  render() {\n    const filtredContacts = this.getFiltredContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList contacts={filtredContacts} onDeleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__10sfo\",\"formWrap\":\"ContactForm_formWrap__k8mx4\",\"label\":\"ContactForm_label__1pTxP\",\"input\":\"ContactForm_input__2bUtU\",\"button\":\"ContactForm_button__2_CJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__dljXS\",\"input\":\"Filter_input__3tqgS\"};"],"sourceRoot":""}